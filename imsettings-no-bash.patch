--- imsettings-1.8.4/data/imsettings-functions.in.orig	2023-09-08 17:57:33.267670134 +0200
+++ imsettings-1.8.4/data/imsettings-functions.in	2023-09-08 18:05:24.628449887 +0200
@@ -23,7 +23,7 @@
 LOGDIR="${XDG_CACHE_HOME:-$HOME/.cache}/imsettings"
 LOGFILE="$LOGDIR/log"
 
-function log_init() {
+log_init() {
   if [ -z "$DRY_RUN" ]; then
     if [ -f "$HOME"/.imsettings.log ]; then
       mv "$HOME"/.imsettings.log "$LOGFILE".bak
@@ -33,20 +33,20 @@ function log_init() {
   fi
 }
 
-function log() {
+log() {
   echo "$@" >> "$LOGFILE"
 }
 
-function is_dbus_enabled() {
+is_dbus_enabled() {
   @libexecdir[@]/imsettings-check --check-dbus
   [ $? -eq 0 ]
 }
 
-function is_imsettings_enabled() {
+is_imsettings_enabled() {
   [ -z "$DISABLE_IMSETTINGS" ] && is_dbus_enabled
 }
 
-function check_imsettings_capability() {
+check_imsettings_capability() {
   mod=$1
   @libexecdir[@]/imsettings-check --check-modules >/dev/null
   ret=$?
@@ -57,7 +57,7 @@ function check_imsettings_capability() {
   return $ret
 }
 
-function lookup_desktop() {
+lookup_desktop() {
   ret=$(cat "$1")
   case $ret in
     cinnamon*)
@@ -84,7 +84,7 @@ function lookup_desktop() {
   esac
 }
 
-function get_desktop() {
+get_desktop() {
   if [ -n "$XDG_CURRENT_DESKTOP" ]; then
     GUESS_DESKTOP="\$XDG_CURRENT_DESKTOP"
     echo -n "$XDG_CURRENT_DESKTOP"
@@ -111,7 +111,7 @@ function get_desktop() {
     else
       echo -n "$DESKTOP_SESSION"
     fi
-    [ "${GUESS_DESKTOP:0:1}" == "/" ] && lookup_desktop "$GUESS_DESKTOP"
+    [ "$(echo "$GUEST_DESKTOP" | cut -c1)" == "/" ] && lookup_desktop "$GUESS_DESKTOP"
   else
     echo -n "unknown"
   fi
@@ -123,7 +123,7 @@ function get_desktop() {
   fi
 }
 
-function is_gtk_supported() {
+is_gtk_supported() {
   [ -n "$IMSETTINGS_DISABLE_DESKTOP_CHECK" ] && return 0
   case "$(get_desktop|tr '[:upper:]' '[:lower:]')" in
     *wayland)
@@ -163,7 +163,7 @@ function is_gtk_supported() {
   return 1
 }
 
-function is_qt_supported() {
+is_qt_supported() {
   [ -n "$IMSETTINGS_DISABLE_DESKTOP_CHECK" ] && return 0
   case "$(get_desktop|tr '[:upper:]' '[:lower:]')" in
     *wayland)
@@ -176,7 +176,7 @@ function is_qt_supported() {
   return 1
 }
 
-function is_xim_supported() {
+is_xim_supported() {
   [ -n "$IMSETTINGS_DISABLE_DESKTOP_CHECK" ] && return 0
   if check_imsettings_capability xim; then
     return 0
@@ -185,20 +185,20 @@ function is_xim_supported() {
   return 1
 }
 
-function is_desktop_supported() {
+is_desktop_supported() {
   @libexecdir[@]/imsettings-check --check-desktop "$(get_desktop)" >/dev/null
   [ $? -eq 0 ]
 }
 
-function is_action_needed() {
+is_action_needed() {
   ret=0
-  for i in ${IMSETTINGS_IGNORE_SESSION//,/ }; do
+  for i in $(echo "${IMSETTINGS_IGNORE_SESSION}" | tr , ' '); do
     [ "$(get_desktop|tr '[:upper:]' '[:lower:]')" == "$(echo $i|tr '[:upper:]' '[:lower:]')" ] && ret=1
   done
   return $ret
 }
 
-function setup_gtk_immodule() {
+setup_gtk_immodule() {
   if ! is_action_needed || is_imsettings_enabled && is_gtk_supported; then
     # Ensure GTK_IM_MODULE is empty. otherwise GTK+ doesn't pick up immodule through XSETTINGS
     unset GTK_IM_MODULE
@@ -207,7 +207,7 @@ function setup_gtk_immodule() {
   fi
 }
 
-function setup_qt_immodule() {
+setup_qt_immodule() {
   if ! is_action_needed; then
     unset QT_IM_MODULE
   fi
@@ -220,7 +220,7 @@ function setup_qt_immodule() {
   fi
 }
 
-function setup_xim() {
+setup_xim() {
   if is_imsettings_enabled && is_xim_supported; then
     # setup XMODIFIERS
     XMODIFIERS="@im=imsettings"
@@ -231,7 +231,7 @@ function setup_xim() {
   fi
 }
 
-function run_imsettings() {
+run_imsettings() {
   print_info
   if [ -n "$DRY_RUN" ]; then
     log "*** DRY RUN MODE: running IM through imsettings"
@@ -248,7 +248,7 @@ function run_imsettings() {
   fi
 }
 
-function run_xim() {
+run_xim() {
   print_info
   if [ -n "$DRY_RUN" ]; then
     log "*** DRY RUN MODE: running IM without imsettings"
@@ -263,7 +263,7 @@ function run_xim() {
   fi
 }
 
-function print_result() {
+print_result() {
   $1
   if [ $? -eq 0 ]; then
     log yes
@@ -272,7 +272,7 @@ function print_result() {
   fi
 }
 
-function print_info() {
+print_info() {
   log "imsettings information"
   log "=========================="
   log "XINPUTRC: $READ_XINPUTRC"
--- imsettings-1.8.4/data/xinput.sh.in.in.orig	2023-09-08 17:57:33.261003504 +0200
+++ imsettings-1.8.4/data/xinput.sh.in.in	2023-09-08 18:06:51.864643955 +0200
@@ -1,4 +1,4 @@
-#!/bin/bash
+#!/bin/sh
 # Copyright (C) 1999-2004,2007-2011 Red Hat, Inc. All rights reserved. This
 # copyrighted material is made available to anyone wishing to use, modify,
 # copy, or redistribute it subject to the terms and conditions of the
@@ -24,13 +24,13 @@ oldterm=$TERM
 unset TERM
 if [ -r /etc/profile.d/lang.sh ]; then
     # for Fedora etc
-    source /etc/profile.d/lang.sh
+    . /etc/profile.d/lang.sh
 elif [ -r /etc/default/locale ]; then
     # for Debian
-    source /etc/default/locale
+    . /etc/default/locale
 elif [ -r /etc/env.d/02locale ]; then
     # for Gentoo
-    source /etc/env.d/02locale
+    . /etc/env.d/02locale
 fi
 [ -n "$oldterm" ] && export TERM=$oldterm
 
@@ -60,7 +60,7 @@ fi
 rm -f $XCONFIGDIR/environment.d/imsettings*.conf || :
 
 if [ -r "$USER_XINPUTRC" -a "x$IMSETTINGS_DISABLE_USER_XINPUTRC" = "xno" ]; then
-    source "$USER_XINPUTRC"
+    . "$USER_XINPUTRC"
     READ_XINPUTRC=$USER_XINPUTRC
     if [ ! -h "$USER_XINPUTRC" ]; then
 	SHORT_DESC="User Specific"
@@ -72,7 +72,7 @@ elif [ -r "$SYS_XINPUTRC" -a "x$IMSETTIN
     _sourced_xinputrc=0
     for i in $_im_language_list; do
         if echo $tmplang | grep -q -E "^$i"; then
-            source "$SYS_XINPUTRC"
+            . "$SYS_XINPUTRC"
             READ_XINPUTRC=$SYS_XINPUTRC
             _sourced_xinputrc=1
             break
@@ -84,7 +84,7 @@ elif [ -r "$SYS_XINPUTRC" -a "x$IMSETTIN
         _xcompose_language_list="am_ET el_GR fi_FI pt_BR ru_RU"
         for i in $_xcompose_language_list; do
             if echo $tmplang | grep -q -E "^$i"; then
-                source @XINPUT_PATH@/xcompose.conf
+                . @XINPUT_PATH@/xcompose.conf
                 _sourced_xinputrc=1
                 break
             fi
@@ -92,7 +92,7 @@ elif [ -r "$SYS_XINPUTRC" -a "x$IMSETTIN
     fi
     if [ $_sourced_xinputrc -eq 0 ]; then
         # Read none.conf to set up properly for locales not listed the above.
-        source @XINPUT_PATH@/none.conf
+        . @XINPUT_PATH@/none.conf
     fi
 fi
 
--- imsettings-1.8.4/data/xinputinfo.sh.in.orig	2023-08-22 13:42:17.000000000 +0200
+++ imsettings-1.8.4/data/xinputinfo.sh.in	2023-09-08 18:08:13.904199508 +0200
@@ -1,4 +1,4 @@
-#!/bin/bash
+#!/bin/sh
 # xinputinfo.sh
 # Copyright (C) 2008-2012 Red Hat, Inc. All rights reserved.
 
@@ -22,7 +22,7 @@
 
 . @libexecdir[@]/imsettings-functions
 
-function is_script() {
+is_script() {
     if [ "x$(sed -re '/^[ 	]?*[a-zA-Z0-9_]+=.*/{d};/[ 	]?*#.*/{d}' $1)" = "x" ]; then
 	return 1
     else
@@ -39,13 +39,13 @@ oldterm=$TERM
 unset TERM
 if [ -r /etc/profile.d/lang.sh ]; then
     # for Fedora etc
-    source /etc/profile.d/lang.sh
+    . /etc/profile.d/lang.sh
 elif [ -r /etc/default/locale ]; then
     # for Debian
-    source /etc/default/locale
+    . /etc/default/locale
 elif [ -r /etc/env.d/02locale ]; then
     # for Gentoo
-    source /etc/env.d/02locale
+    . /etc/env.d/02locale
 fi
 [ -n "$oldterm" ] && export TERM=$oldterm
 
@@ -55,17 +55,17 @@ tmplang=${LC_CTYPE:-${LANG:-"en_US.UTF-8
 unset AUXILIARY_PROGRAM AUXILIARY_ARGS GTK_IM_MODULE ICON IMSETTINGS_IGNORE_ME IMSETTINGS_IGNORE_SESSION LONG_DESC NOT_RUN PREFERENCE_PROGRAM PREFERENCE_ARGS QT_IM_MODULE SHORT_DESC XIM XIM_PROGRAM XIM_ARGS IS_XIM
 
 if [ $# -gt 0 ]; then
-    source $1
+    . $1
     IMSETTINGS_FILENAME=$1
 else
     [ -z "${IMSETTINGS_DISABLE_USER_XINPUTRC-}" ] && IMSETTINGS_DISABLE_USER_XINPUTRC=no
     [ -z "${IMSETTINGS_DISABLE_SYS_XINPUTRC-}" ] && IMSETTINGS_DISABLE_SYS_XINPUTRC=no
 
     if [ -r "$USER_XINPUTRC" -a "x$IMSETTINGS_DISABLE_USER_XINPUTRC" = "xno" ]; then
-	source "$USER_XINPUTRC"
+	. "$USER_XINPUTRC"
 	IMSETTINGS_FILENAME=$USER_XINPUTRC
     elif [ -r "$SYS_XINPUTRC" -a "x$IMSETTINGS_DISABLE_SYS_XINPUTRC" = "xno" ]; then
-	source "$SYS_XINPUTRC"
+	. "$SYS_XINPUTRC"
 	IMSETTINGS_FILENAME=$SYS_XINPUTRC
     fi
 fi
--- imsettings-1.6.3/data/imsettings-target-checker.sh.in~	2013-05-27 05:39:15.000000000 +0200
+++ imsettings-1.6.3/data/imsettings-target-checker.sh.in	2013-07-15 08:12:17.339869611 +0200
@@ -1,4 +1,4 @@
-#! /bin/bash
+#!/bin/sh
 # imsettings-target-checker.sh
 # Copyright (C) 2013 Akira TAGOH
 #
--- imsettings-1.8.2/imsettings-daemon/imsettings-server.c.orig	2019-11-14 06:08:03.000000000 +0100
+++ imsettings-1.8.2/imsettings-daemon/imsettings-server.c	2020-04-24 16:54:57.049247210 +0200
@@ -722,9 +722,9 @@
 		helper_path = g_strdup(IMSETTINGS_HELPER_PATH);
 	script = g_build_filename(helper_path, "imsettings-target-checker.sh", NULL);
 	if (desktop)
-		cmd = g_strdup_printf("bash -c 'export XDG_CURRENT_DESKTOP=%s; bash %s'", quoted_desktop ? quoted_desktop : "", script);
+		cmd = g_strdup_printf("sh -c 'export XDG_CURRENT_DESKTOP=%s; sh %s'", quoted_desktop ? quoted_desktop : "", script);
 	else
-		cmd = g_strdup_printf("bash -c %s", script);
+		cmd = g_strdup_printf("sh -c %s", script);
 	g_free(script);
 	g_free(helper_path);
 
--- imsettings-1.8.2/utils/imsettings-switch.c.orig	2019-11-14 06:10:12.000000000 +0100
+++ imsettings-1.8.2/utils/imsettings-switch.c	2020-04-24 16:55:51.335619782 +0200
@@ -105,7 +105,7 @@
 		else
 			helper_path = g_strdup(IMSETTINGS_HELPER_PATH);
 		script = g_build_filename(helper_path, "imsettings-functions", NULL);
-		cmd = g_strdup_printf("bash -c '. %s && echo -n $(get_desktop)'", script);
+		cmd = g_strdup_printf("sh -c '. %s && echo -n $(get_desktop)'", script);
 		g_free(script);
 		g_free(helper_path);
 		g_spawn_command_line_sync(cmd, &out, NULL, &ret, &error);
